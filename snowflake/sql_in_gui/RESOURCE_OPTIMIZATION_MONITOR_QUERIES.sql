--
--This query returns an aggregated daily summary of all loads for each table in Snowflake showing average file size,
--total rows, total volume and the ingest method (copy or snowpipe)
--
SELECT
    TO_DATE (LAST_LOAD_TIME) as LOAD_DATE,
    STATUS,
    TABLE_CATALOG_NAME as DATABASE_NAME,
    TABLE_SCHEMA_NAME as SCHEMA_NAME,
    TABLE_NAME,
    CASE
        WHEN PIPE_NAME IS NULL THEN 'COPY'
        ELSE 'SNOWPIPE'
    END AS INGEST_METHOD,
    SUM(ROW_COUNT) as ROW_COUNT,
    SUM(ROW_PARSED) as ROWS_PARSED,
    AVG(FILE_SIZE) as AVG_FILE_SIZE_BYTES,
    SUM(FILE_SIZE) as TOTAL_FILE_SIZE_BYTES,
    SUM(FILE_SIZE) / POWER(1024, 1) as TOTAL_FILE_SIZE_KB,
    SUM(FILE_SIZE) / POWER(1024, 2) as TOTAL_FILE_SIZE_MB,
    SUM(FILE_SIZE) / POWER(1024, 3) as TOTAL_FILE_SIZE_GB,
    SUM(FILE_SIZE) / POWER(1024, 4) as TOTAL_FILE_SIZE_TB
FROM
    "SNOWFLAKE"."ACCOUNT_USAGE"."COPY_HISTORY"
GROUP BY
    1,
    2,
    3,
    4,
    5,
    6
ORDER BY
    3,
    4,
    5,
    1,
    2;

--LIST OF WAREHOUSES AND DAYS WHERE MCW COULD HAVE HELPED
SELECT
    TO_DATE (START_TIME) as DATE,
    WAREHOUSE_NAME,
    SUM(AVG_RUNNING) AS SUM_RUNNING,
    SUM(AVG_QUEUED_LOAD) AS SUM_QUEUED
FROM
    "SNOWFLAKE"."ACCOUNT_USAGE"."WAREHOUSE_LOAD_HISTORY"
WHERE
    TO_DATE (START_TIME) >= DATEADD (month, -1, CURRENT_TIMESTAMP())
GROUP BY
    1,
    2
HAVING
    SUM(AVG_QUEUED_LOAD) > 0;

--LIST OF WAREHOUSES AND QUERIES WHERE A LARGER WAREHOUSE WOULD HAVE HELPED WITH REMOTE SPILLING
SELECT
    QUERY_ID,
    USER_NAME,
    WAREHOUSE_NAME,
    WAREHOUSE_SIZE,
    BYTES_SCANNED,
    BYTES_SPILLED_TO_REMOTE_STORAGE,
    BYTES_SPILLED_TO_REMOTE_STORAGE / BYTES_SCANNED AS SPILLING_READ_RATIO
FROM
    "SNOWFLAKE"."ACCOUNT_USAGE"."QUERY_HISTORY"
WHERE
    BYTES_SPILLED_TO_REMOTE_STORAGE > BYTES_SCANNED * 5 -- Each byte read was spilled 5x on average
ORDER BY
    SPILLING_READ_RATIO DESC;
